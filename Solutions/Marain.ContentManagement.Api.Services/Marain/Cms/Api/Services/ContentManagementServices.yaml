openapi: '3.0.0'
info:
  version: 1.0.0
  title: Content Management Service
servers:
  - url: https://content.marain.io
paths:
  /{tenantId}/marain/content/{slug}:
    post:
      tags:
        - Content
      summary: Create content at the slug
      description: Creates a new content instance for the slug
      operationId: createContent
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/slug'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
      responses:
        '201':
          description: Successful operation
          headers:
            Location:
              description: The location of the created content
              schema:
                type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '409':
          description: Conflict - content with the given ID and Slug has already been created.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Content
      summary: Get the content at the slug with the given ID
      description: Gets a new content instance for the slug
      operationId: getContent
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/contentId'
        - $ref: '#/components/parameters/ifNoneMatch'
      responses:
        '200':
          description: Successful operation
          headers:
            ETag:
              description: The etag for the content
              schema:
                type: string
            Cache-Control:
              description: The caching instruction for the Content
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found    
  /{tenantId}/marain/content/history/{slug}:
    get:
      tags:
        - Content
      summary: Get content history at slug
      description: Get the history of the content at the given slug
      operationId: getContentHistory
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/continuationToken'
        - $ref: '#/components/parameters/ifNoneMatch'
      responses:
        '200':
          description: Successful operation
          headers:
            ETag:
              description: The etag for the content
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSummaries'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found    
  /{tenantId}/marain/content/workflow/{workflowId}/content/{slug}:
    get:
      tags:
        - Content Workflow
      summary: Get the current content for the workflow at the slug
      description: Gets the content associated with the given workflowId in the current state. The response includes the content and the state information.
      operationId: getWorkflowContent
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/contentId'
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/workflowId'
      responses:
        '200':
          description: Successful operation        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentWithState'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
  /{tenantId}/marain/content/workflow/{workflowId}/state/{slug}:
    get:
      tags:
        - Content Workflow
      summary: Get the current state for the workflow at the slug
      description: Gets state information associated with the given workflowId for the current state at that slug. The response includes a link to the content associated with that state.
      operationId: getWorkflowState
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/contentId'
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/workflowId'
      responses:
        '200':
          description: Successful operation        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
  /{tenantId}/marain/content/workflow/{workflowId}/history/{slug}:
    get:
      tags:
        - Content Workflow
      summary: Get the state history for the given workflow at the slug with the given ID
      description: Gets the state history for the given workflow at the slug. The history includes links to the content associated with those states.
      operationId: getWorkflowHistory
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/workflowId'
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: Successful operation        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSummariesWithState'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
  /{tenantId}/marain/content/workflow/{workflowId}/{stateName}/history/{slug}:
    get:
      tags:
        - Content Workflow
      summary: Get the state history for the content at the given slug
      description: Gets the state history for the content at the given slug in the given workflow, including only those items in the specified state.
      operationId: getWorkflowStateHistory
      parameters:
        - $ref: '#/components/parameters/tenantId'
        - $ref: '#/components/parameters/workflowId'
        - $ref: '#/components/parameters/stateName'
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          description: Successful operation        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSummariesWithState'
        '304':
          description: Not modified
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
components:
  schemas:
    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          title: URI of the target resource
          description: Either a URI [RFC3986] or URI Template [RFC6570] of the target
            resource.
        templated:
          type: boolean
          default: false
          title: URI Template
          description: Is true when the link object's href property is a URI Template.
            Defaults to false.
        type:
          type: string
          pattern: "^(application|audio|example|image|message|model|multipart|text|video)\\/[a-zA-Z0-9!#\\$&\\.\\+-\\^_]{1,127}$"
          title: Media type indication of the target resource
          description: When present, used as a hint to indicate the media type expected
            when dereferencing the target resource.
        name:
          type: string
          title: Secondary key
          description: When present, may be used as a secondary key for selecting
            link objects that contain the same relation type.
        profile:
          type: string
          format: uri
          title: Additional semantics of the target resource
          description: A URI that, when dereferenced, results in a profile to allow
            clients to learn about additional semantics (constraints, conventions,
            extensions) that are associated with the target resource representation,
            in addition to those defined by the HAL media type and relations.
        title:
          type: string
          title: Human-readable identifier
          description: When present, is used to label the destination of a link
            such that it can be used as a human-readable identifier (e.g. a menu
            entry) in the language indicated by the Content-Language header (if
            present).
        hreflang:
          type: string
          pattern: "^([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*([0-9A-WY-Za-wy-z](-[a-zA-Z0-9]{2,8}){1,})*(x-[a-zA-Z0-9]{2,8})?)|(x-[a-zA-Z0-9]{2,8})|(en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE)|(art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang)$"
          title: Language indication of the target resource [RFC5988]
          description: When present, is a hint in RFC5646 format indicating what
            the language of the result of dereferencing the link should be.  Note
            that this is only a hint; for example, it does not override the Content-Language
            header of a HTTP response obtained by actually following the link.
    PropertyBag:
      type: object
      additionalProperties:
        oneOf:
          - type: array
          - type: boolean
          - type: integer
          - type: number
          - type: object
          - type: string
    Resource:
      type: object
      properties:
        _links:
          type: object
          title: Hyperlink
          description: Represents a hyperlink from the cotntaining resource to a URI.
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/Link'
            - type: array
              items:
                $ref: '#/components/schemas/Link'
              uniqueItems: true
              additionalProperties: false
        _embedded:
          type: object
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/Resource'
            - type: array
              items:
                $ref: '#/components/schemas/Resource'
              uniqueItems: true
              additionalProperties: false
      additionalProperties: true
    ContentSummary:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the tenant. This forms a path with parent tenants. 
        eTag:
          type: string
        contentType:
          type: string
          description: The content type of the tenant.
        categoryPaths:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        slug:
          type: string          
        author:
          $ref: '#/components/schemas/CmsIdentity'
        title:
          type: string
        description:
          type: string
        culture:
          type: string
      required:
        - id
        - contentType
        - slug
      additionalProperties: true
    State:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          stateName:
            type: string
          workflowId:
            type: string
          slug:
            type: string
          changedBy:
            $ref: '#/components/schemas/CmsIdentity'
          timestamp:
            type: integer
        additionalProperties: true
    ContentPayload:
      type: object
      properties:
        contentType:
          type: string
      additionalProperties: true
    Content:
      allOf:
      - $ref: '#/components/schemas/ContentSummary'
      - type: object
        properties:
          contentPayload:
            $ref: '#/components/schemas/ContentPayload'
          metadata:
            $ref: '#/components/schemas/PropertyBag'
        additionalProperties: true
    ContentResponse:
      allOf: 
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/Content'
    ContentWithState:
      allOf:
      - $ref: '#/components/schemas/Content'
      - type: object
        properties:
          stateName:
            type: string
          timestamp:
            type: integer
          worfklowId:
            type: string
        additionalProperties: true
    ContentSummaryWithState:
      allOf:
      - $ref: '#/components/schemas/ContentSummary'
      - type: object
        properties:
          stateName:
            type: string
          timestamp:
            type: integer
          worfklowId:
            type: string
        additionalProperties: true
    ContentSummaries:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          summaries:
            type: array
            items:
              $ref: '#/components/schemas/ContentSummary'
        additionalProperties: true
    ContentSummariesWithState:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          summaries:
            type: array
            items:
              $ref: '#/components/schemas/ContentSummaryWithState'
        additionalProperties: true
    CmsIdentity:
      type: object
      properties:
        userId:
          type: string
        userName:
          type: string
      required:
        - userId
    ProblemDetails:
      required:
        - status
        - detail
      properties:
        status:
          type: integer
          format: int32
        detail:
          type: string
        title:
          type: string
        instance:
          type: string
          format: url
        type: 
          type: string
          format: url
        validationErrors: 
          type: array
          items:
            oneOf:
            - type: array
            - type: boolean
            - type: integer
            - type: number
            - type: object
            - type: string
      additionalProperties: true
  parameters:
    tenantId:
      name: tenantId
      in: path
      x-ms-parameter-location: method
      description: The tenant within which the request should operate
      required: true
      schema:
        type: string
    workflowId:
      name: workflowId
      in: path
      x-ms-parameter-location: method
      description: The id of the workflow relating to the request
      required: true
      schema:
        type: string
    stateName:
      name: stateName
      in: path
      x-ms-parameter-location: method
      description: The name of the state in the workflow
      required: true
      schema:
        type: string
    slug:
      name: slug
      in: path      
      x-ms-parameter-location: method
      description: The slug for the content
      required: true
      schema:
        type: string
    contentId:
      name: contentId
      in: query
      x-ms-parameter-location: method
      description: The contentId for the content at the slug
      required: true
      schema:
        type: string
    ifNoneMatch:
      name: If-None-Match
      in: header
      x-ms-parameter-location: method
      description: The ETag of the last known version.
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      x-ms-parameter-location: method
      description: The maximum number of items to return in the batch
      required: false
      schema:
        type: number
        minimum: 1
    continuationToken:
      name: continuationToken
      in: query
      x-ms-parameter-location: method
      description: The continuation token for the next batch
      required: false
      schema:
        type: string
